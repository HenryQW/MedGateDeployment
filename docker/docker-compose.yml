version: "3"

services:
  tika:
    image: logicalspark/docker-tikaserver:latest
    ports:
      - "9998:9998"
    networks:
      - esnet
    restart: on-failure

  redis:
    image: redis:4.0.8
    container_name: redis-server
#    command: ["redis-server", "--appendonly", "yes"]
#    volumes:
#      - "redisdata:/usr/share/redis/data"
    networks:
      - esnet
    ports:
      - 6379:6379
    restart: on-failure

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.1.4
    container_name: elasticsearch
    env_file: ../medgate.config
    environment:
      - discovery.type=single-node
#      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=true
#      - xpack.monitoring.collection.enabled=true
      - xpack.ml.enabled=false
      - xpack.graph.enabled=false
      - xpack.watcher.enabled=false
      - ES_JAVA_OPTS=-Xms26g -Xmx26g
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "esdata:/usr/share/elasticsearch/data"
    networks:
      - esnet
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: on-failure

  kibana:
    image: docker.elastic.co/kibana/kibana:6.1.4
    container_name: kibana
    environment:
      - elasticsearch.url= http://elasticsearch:9200
      - xpack.monitoring.ui.container.elasticsearch.enabled=true
    networks:
      - esnet
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    #command: ["./wait-for-it.sh", "elasticsearch:9200", "-t 0"]

  postgres:
    image: postgres:alpine
    container_name: postgres
    env_file: ../medgate.config
    volumes:
      - "pgdata:/var/lib/postgresql/data"
    networks:
      - esnet
    ports:
      - "5432:5432"
    restart: on-failure

  ftp_server:
    image: fauria/vsftpd
    env_file: ../medgate.config
    container_name: ftpserver
    volumes:
      - "/medgate/ingress:/home/vsftpd"
    environment:
      - PASV_ADDRESS=${host_ip}
      - PASV_MIN_PORT=21100
      - PASV_MAX_PORT=21110
    ports:
      - "21:21"
      - "21100-21110:21100-21110"
    restart: on-failure

  medgate-service:
    image: swanseauniversitymedical/medgate-dev:latest
    container_name: medgate-service
    env_file: ../medgate.config
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - no_proxy=vault,localhost,elasticsearch,tika,postgres
      - host_ip=${host_ip}
    volumes:
      - "/medgate:/medgate"
      - "/gcp:/gcp"
    networks:
      - esnet
    ports:
      - "80:80"
    depends_on:
      - postgres
      - elasticsearch
    restart: on-failure


  filebeat:
    build: ./filebeat/
    container_name: filebeat
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # "//var/run/docker.sock" for windows, "/var/run/docker.sock" for linux
      - /var/lib/docker/containers/:/var/log/monitor/docker/
    restart: on-failure
    networks:
      - esnet
    depends_on:
      - elasticsearch


  metricbeat:
    build: ./metricbeat/
    container_name: metricbeat
    restart: unless-stopped
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - esnet
    depends_on:
      - elasticsearch
    command:
      - "-system.hostfs=/hostfs"

  gcp_8.4.1:
    image: swanseauniversitymedical/gcp
    container_name: gcp_8.4.1
    volumes:
      - "/gcp/instances/gcp_1:/control"
      - "/gcp/data:/control/data"
      - "/gcp/output:/control/output"
      - "/gcp/applications:/control/application"
    depends_on:
      - medgate-service
    command: ["-t","4","-m","20G","-d","/control"]
    restart: on-failure

  nrdagateway:
    image: swanseauniversitymedical/nrdagateway-dev:latest
    ports:
      - "88:80"
    restart: on-failure

  pgadmin:
    image: fenglc/pgadmin4
    ports:
      - "5050:5050"
    depends_on:
      - postgres
    restart: on-failure

volumes:
  esdata:
  pgdata:
#  redisdata:

networks:
  esnet:
    #driver: custom-driver-1
